VaR_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
VaR_est[1] = NULL
colnames(VaR_est) <- 1-alpha
#uc_ind_test(VaR_est=VaR_est, cl=alpha, file=paste("backtest/tranquil/backtest_", var_file, sep=""))
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_est=VaR_est[toString(0.99)], var_true=VaR_true)
}
dim(VaR_est)
dim(VaR_true)
dim(VaR_true)[0]
dim(VaR_true)[1]
source("R/fun_VaR_backtesting.R")
for (var_file in var_files) {
VaR_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
VaR_est[1] = NULL
colnames(VaR_est) <- 1-alpha
#uc_ind_test(VaR_est=VaR_est, cl=alpha, file=paste("backtest/tranquil/backtest_", var_file, sep=""))
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_est=VaR_est[toString(0.99)], var_true=VaR_true)
}
source("R/fun_VaR_backtesting.R")
for (var_file in var_files) {
VaR_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
VaR_est[1] = NULL
colnames(VaR_est) <- 1-alpha
#uc_ind_test(VaR_est=VaR_est, cl=alpha, file=paste("backtest/tranquil/backtest_", var_file, sep=""))
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_est=VaR_est[toString(0.99)], var_true=VaR_true)
}
source("R/fun_VaR_backtesting.R")
for (var_file in var_files) {
VaR_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
VaR_est[1] = NULL
colnames(VaR_est) <- 1-alpha
#uc_ind_test(VaR_est=VaR_est, cl=alpha, file=paste("backtest/tranquil/backtest_", var_file, sep=""))
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_est=VaR_est[toString(0.99)], var_true=VaR_true)
}
source("R/fun_VaR_backtesting.R")
for (var_file in var_files) {
VaR_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
VaR_est[1] = NULL
colnames(VaR_est) <- 1-alpha
#uc_ind_test(VaR_est=VaR_est, cl=alpha, file=paste("backtest/tranquil/backtest_", var_file, sep=""))
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_est=VaR_est[toString(0.99)], var_true=VaR_true)
}
for (var_file in var_files) {
VaR_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
VaR_est[1] = NULL
colnames(VaR_est) <- 1-alpha
#uc_ind_test(VaR_est=VaR_est, cl=alpha, file=paste("backtest/tranquil/backtest_", var_file, sep=""))
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_est=VaR_est[toString(toString(0.99))], var_true=VaR_true)
}
source("R/fun_VaR_backtesting.R")
for (var_file in var_files) {
VaR_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
VaR_est[1] = NULL
colnames(VaR_est) <- 1-alpha
#uc_ind_test(VaR_est=VaR_est, cl=alpha, file=paste("backtest/tranquil/backtest_", var_file, sep=""))
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_est=VaR_est[toString(toString(0.99))], var_true=VaR_true)
}
View(VaR_est[toString(,0.99)])
## Backtest portfolio Value-at-Risk
rownames(VaR_true) <- 1:T
for (var_file in var_files) {
VaR_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
VaR_est[1] = NULL
colnames(VaR_est) <- 1-alpha
#uc_ind_test(VaR_est=VaR_est, cl=alpha, file=paste("backtest/tranquil/backtest_", var_file, sep=""))
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_est=VaR_est[toString(t, oString(0.99))], var_true=VaR_true)
}
for (var_file in var_files) {
VaR_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
VaR_est[1] = NULL
colnames(VaR_est) <- 1-alpha
#uc_ind_test(VaR_est=VaR_est, cl=alpha, file=paste("backtest/tranquil/backtest_", var_file, sep=""))
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_est=VaR_est[toString(t, toString(0.99))], var_true=VaR_true)
}
## Backtest portfolio Value-at-Risk
rownames(VaR_true) <- 1:T
for (var_file in var_files) {
VaR_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
VaR_est[1] = NULL
colnames(VaR_est) <- 1-alpha
#uc_ind_test(VaR_est=VaR_est, cl=alpha, file=paste("backtest/tranquil/backtest_", var_file, sep=""))
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_est=VaR_est[, toString(0.99)], var_true=VaR_true)
}
View(VaR_true[1,])
View(VaR_true[1,1])
source("R/fun_VaR_backtesting.R")
for (var_file in var_files) {
VaR_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
VaR_est[1] = NULL
colnames(VaR_est) <- 1-alpha
#uc_ind_test(VaR_est=VaR_est, cl=alpha, file=paste("backtest/tranquil/backtest_", var_file, sep=""))
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_est=VaR_est[, toString(0.99)], var_true=VaR_true)
}
View(VaR_est[, toString(0.99)])
View(VaR_true)
for (var_file in var_files) {
VaR_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
VaR_est[1] = NULL
colnames(VaR_est) <- 1-alpha
#uc_ind_test(VaR_est=VaR_est, cl=alpha, file=paste("backtest/tranquil/backtest_", var_file, sep=""))
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_est=c(VaR_est[, toString(0.99)]), var_true=c(VaR_true))
}
source("R/fun_VaR_backtesting.R")
for (var_file in var_files) {
VaR_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
VaR_est[1] = NULL
colnames(VaR_est) <- 1-alpha
#uc_ind_test(VaR_est=VaR_est, cl=alpha, file=paste("backtest/tranquil/backtest_", var_file, sep=""))
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_est=c(VaR_est[, toString(0.99)]), var_true=c(VaR_true))
}
source("R/fun_VaR_backtesting.R")
for (var_file in var_files) {
VaR_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
VaR_est[1] = NULL
colnames(VaR_est) <- 1-alpha
#uc_ind_test(VaR_est=VaR_est, cl=alpha, file=paste("backtest/tranquil/backtest_", var_file, sep=""))
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_est=c(VaR_est[, toString(0.99)]), var_true=c(VaR_true))
}
which(VaR_true < VaR_est[, toString(0.99)])
source("R/fun_VaR_backtesting.R")
for (var_file in var_files) {
VaR_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
VaR_est[1] = NULL
colnames(VaR_est) <- 1-alpha
#uc_ind_test(VaR_est=VaR_est, cl=alpha, file=paste("backtest/tranquil/backtest_", var_file, sep=""))
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_est=c(VaR_est[, toString(0.99)]), var_true=c(VaR_true))
}
source("R/fun_VaR_backtesting.R")
for (var_file in var_files) {
VaR_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
VaR_est[1] = NULL
colnames(VaR_est) <- 1-alpha
#uc_ind_test(VaR_est=VaR_est, cl=alpha, file=paste("backtest/tranquil/backtest_", var_file, sep=""))
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_est=c(VaR_est[, toString(0.99)]), var_true=c(VaR_true))
print(ans)
}
source("R/fun_VaR_backtesting.R")
for (var_file in var_files) {
VaR_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
VaR_est[1] = NULL
colnames(VaR_est) <- 1-alpha
#uc_ind_test(VaR_est=VaR_est, cl=alpha, file=paste("backtest/tranquil/backtest_", var_file, sep=""))
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_est=c(VaR_est[, toString(0.99)]), var_true=c(VaR_true))
print(ans)
}
source("R/fun_VaR_backtesting.R")
for (var_file in var_files) {
VaR_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
VaR_est[1] = NULL
colnames(VaR_est) <- 1-alpha
#uc_ind_test(VaR_est=VaR_est, cl=alpha, file=paste("backtest/tranquil/backtest_", var_file, sep=""))
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_est=c(VaR_est[, toString(0.99)]), var_true=c(VaR_true))
print(ans)
}
source("R/fun_VaR_backtesting.R")
source("R/fun_VaR_backtesting.R")
for (var_file in var_files) {
VaR_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
VaR_est[1] = NULL
colnames(VaR_est) <- 1-alpha
#uc_ind_test(VaR_est=VaR_est, cl=alpha, file=paste("backtest/tranquil/backtest_", var_file, sep=""))
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_est=c(VaR_est[, toString(0.99)]), var_true=c(VaR_true))
print(ans)
}
## Backtest portfolio Value-at-Risk
rownames(VaR_true) <- 1:T
var_files <- list.files(path="VaR/tranquil/")
## Backtest portfolio Conditional Value-at-Risk
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
var_files
rownames(cvar_mat)
rbind(rownames(cvar_mat), var_files)
View(rbind(rownames(cvar_mat), var_files))
View(cbind(rownames(cvar_mat), var_files))
View(var_files)
View(rownames(cvar_mat))
data.frame(A=rownames(cvar_mat), B= var_files))
data.frame(A=rownames(cvar_mat), B= var_files)
for (rowname in rownames(cvar_mat)) {
x<- grep(rowname, var_files, value=TRUE)
print(rowname)
print(x)
}
print(rownames(cvar_mat))
VaR_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
VaR_est[1] = NULL
colnames(VaR_est) <- 1-alpha
VaR_est
VaR_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
VaR_est = VaR_est[, ncol(VaR_est)]
VaR_est
## Backtest portfolio Conditional Value-at-Risk
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
var_files <- list.files(path="VaR/tranquil/")
var_files <- var_files[1:2]
var_files
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
source("R/fun_VaR_backtesting.R")
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
source("R/fun_VaR_backtesting.R")
source("R/fun_VaR_backtesting.R")
var_files <- var_files[1:2]
## Backtest portfolio Conditional Value-at-Risk
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
source("R/fun_VaR_backtesting.R")
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
source("R/fun_VaR_backtesting.R")
## Backtest portfolio Conditional Value-at-Risk
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
View(VaR_est[, toString(0.99)])
View(VaR_est[, toString(0.99)])
source("R/fun_VaR_backtesting.R")
source("R/fun_VaR_backtesting.R")
## Backtest portfolio Conditional Value-at-Risk
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
source("R/fun_VaR_backtesting.R")
## Backtest portfolio Conditional Value-at-Risk
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
var_file = "var_DCC_garch_mvnorm_1994_1995.csv"
var_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
print(head(var_est))
var_est = var_est[, ncol(var_est)]
print(head(var_est))
source("R/fun_VaR_backtesting.R")
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
var_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1, blank.lines.skip = TRUE)
var_est = var_est[, ncol(var_est)]
print(head(var_est))
source("R/fun_VaR_backtesting.R")
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
source("R/fun_VaR_backtesting.R")
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
var_file = "var_DCC_garch_mvnorm_1994_1995.csv"
var_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",")
var_est = var_est[, ncol(var_est)]
print(head(var_est))
var_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
var_est = var_est[, ncol(var_est)]
print(head(var_est))
for (rowname in rownames(cvar_mat_99)) {
var_file <- grep(row_name, var_files, value=TRUE)
print(var_file)
var_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",")
var_est = var_est[, ncol(var_est)]
print(head(var_est, 5))
}
for (rowname in rownames(cvar_mat)) {
var_file <- grep(row_name, var_files, value=TRUE)
print(var_file)
var_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",")
var_est = var_est[, ncol(var_est)]
print(head(var_est, 5))
}
for (row_name in rownames(cvar_mat)) {
var_file <- grep(row_name, var_files, value=TRUE)
print(var_file)
var_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",")
var_est = var_est[, ncol(var_est)]
print(head(var_est, 5))
}
for (row_name in rownames(cvar_mat)) {
var_file <- grep(row_name, var_files, value=TRUE)
print(var_file)
var_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1)
var_est = var_est[, ncol(var_est)]
print(head(var_est, 5))
}
for (row_name in rownames(cvar_mat)) {
var_file <- grep(row_name, var_files, value=TRUE)
print(var_file)
var_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1, nrows=T)
var_est = var_est[, ncol(var_est)]
print(head(var_est, 5))
}
for (row_name in rownames(cvar_mat)) {
var_file <- grep(row_name, var_files, value=TRUE)
print(var_file)
var_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1, nrows = T)
var_est = var_est[, ncol(var_est)]
print(head(var_est, 5))
}
for (row_name in rownames(cvar_mat)) {
var_file <- grep(row_name, var_files, value=TRUE)
print(var_file)
var_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1, nrows = T+1)
var_est = var_est[, ncol(var_est)]
print(head(var_est, 5))
}
for (row_name in rownames(cvar_mat)) {
var_file <- grep(row_name, var_files, value=TRUE)
print(var_file)
var_est = read.table(paste("VaR/tranquil/", var_file, sep=""), sep=",", skip=1, nrows = T-1)
var_est = var_est[, ncol(var_est)]
print(head(var_est, 5))
}
var_files <- list.files(path="VaR/tranquil/")
## Backtest portfolio Conditional Value-at-Risk
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
source("R/fun_VaR_backtesting.R")
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
source("R/fun_VaR_backtesting.R")
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
source("R/fun_VaR_backtesting.R")
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
var_files <- var_files[1:2]
source("R/fun_VaR_backtesting.R")
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
source("R/fun_VaR_backtesting.R")
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
View(VaR_true)
source("R/fun_VaR_backtesting.R")
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
View(ans)
var_files <- list.files(path="VaR/tranquil/")
## Backtest portfolio Conditional Value-at-Risk
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
View(ans)
source("R/fun_VaR_backtesting.R")
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
var_files <- var_files[1:2]
source("R/fun_VaR_backtesting.R")
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
View(VaR_est)
source("R/fun_VaR_backtesting.R")
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
source("R/fun_VaR_backtesting.R")
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
View(VaR_true)
source("R/fun_VaR_backtesting.R")
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
View(ans)
source("R/fun_VaR_backtesting.R")
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
View(ans)
print(min(-0.52057731,  0.09206549))
source("R/fun_VaR_backtesting.R")
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
View(ans)
var_files <- list.files(path="VaR/tranquil/")
## Backtest portfolio Conditional Value-at-Risk
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
ans <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files)
View(ans)
source("R/fun_VaR_backtesting.R")
source("R/fun_VaR_backtesting.R")
var_files <- list.files(path="VaR/tranquil/")
## Backtest portfolio Conditional Value-at-Risk
cvar_mat = read.table('CVaR/tranquil/cvar_forecast_1994_1995.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files, file='CVaR/tranquil/backtest_cvar_1994_1995.csv')
source("R/fun_VaR_backtesting.R")
result <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files, file='CVaR/tranquil/backtest_cvar_1994_1995.csv')
View(result)
View(result)
#################################################################################################################
rm(list=ls())  # remove all variables in R
library(tseries)
library(rugarch)
library(rmgarch)
library(parallel)
library(zoo)
library(fGarch)
setwd("~/Documents/Python/PycharmProjects/ml_tue2017/source/main/resources/Data/multivariate_analysis")
source("R/fun_VaR_backtesting.R")
set.seed(42)  # 42:The answer to life, the universe and everything.
####################################################################################################
######                               Volatile Market Conditions                              #######
####################################################################################################
data <- read.csv("DJI30_returns_1987_2001.csv", row.names=1, header=T) # Data sample: 17/3/1987-31/12/2001
data$Date <- NULL
T <- 500  # Out-of-sample test sample: 3/1/2000-31/12/2001
N <- 30  # number of assets under consideration
w <- c(rep(1/N, N))  # asset weight vector (assume equal weights)
a_t <- data - rep(colMeans(data), rep.int(nrow(data), ncol(data)))  # r_t - mu_t = a_t = epsilon_t
t <- c((nrow(data)-T):(nrow(data)-1))
## Backtest portfolio Value-at-Risk and Conditional Value-at-Risk
var_files <- list.files(path="VaR/volatile/")
View(var_files)
## Backtest portfolio Conditional Value-at-Risk
cvar_mat = read.table('CVaR/volatile/cvar_forecast_2000_2001.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
result <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files, file='CVaR/volatile/backtest_cvar_2000_2001.csv')
## Compute true Value-at-Risk
VaR_true <- as.matrix(tail(data, T))%*%w  #  Out-of-sample realized returns for a long position in an equally weighted portfolio
## Backtest portfolio Conditional Value-at-Risk
cvar_mat = read.table('CVaR/volatile/cvar_forecast_2000_2001.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
result <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), var_files=var_files, file='CVaR/volatile/backtest_cvar_2000_2001.csv')
## Backtest portfolio Conditional Value-at-Risk
cvar_mat = read.table('CVaR/volatile/cvar_forecast_2000_2001.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
result <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), period='volatile', var_files=var_files, file='CVaR/volatile/backtest_cvar_2000_2001.csv')
source("R/fun_VaR_backtesting.R")
## Backtest portfolio Conditional Value-at-Risk
cvar_mat = read.table('CVaR/volatile/cvar_forecast_2000_2001.csv', sep=",", row.names = 1)
colnames(cvar_mat) <- 1:T
result <- cvar_analysis(cvar_matrix=cvar_mat, var_true=c(VaR_true), period='volatile', var_files=var_files, file='CVaR/volatile/backtest_cvar_2000_2001.csv')
#################################################################################################################
rm(list=ls())  # remove all variables in R
library(tseries)
library(rugarch)
library(rmgarch)
library(parallel)
library(zoo)
library(fGarch)
setwd("~/Documents/Python/PycharmProjects/ml_tue2017/source/main/resources/Data/multivariate_analysis")
source("R/fun_VaR_backtesting.R")
set.seed(42)  # 42:The answer to life, the universe and everything.
####################################################################################################
######                               Tranquil Market Conditions                              #######
####################################################################################################
# Data sample import
data <- read.csv("DJI30_returns_1987_2001.csv", row.names=1, header=T)[1:2224,] # Data sample: 17/3/1987-29/12/1995 intial in sample period: 1720 observations
data$Date <- NULL
T <- 504  # Out-of-sample test sample: 3/1/1994-29/12/1995
N <- 30  # number of assets under consideration
w <- c(rep(1/N, N))  # asset weight vector (assume equal weights)
# Same first stage conditional mean filtration (unconditional mean)
a_t <- data - rep(colMeans(data), rep.int(nrow(data), ncol(data)))  # r_t - mu_t = a_t = epsilon_t
t <- c((nrow(data)-T):(nrow(data)-1))
#####    Value-at-Risk Estimation   #####
alpha <- c(0.99, 0.975, 0.95, 0.9, 0.8, 0.6, 0.4, 0.2, 0.1, 0.05, 0.025, 0.01)
# Non-rejection regions tranwuil market conditions
for (a in alpha){
print(sprintf("CI %f: [%i,%i]",a, regions_uc_test(T=T, alpha=a)$lb, regions_uc_test(T=T, alpha=a)$ub))
}
#################################################################################################################
rm(list=ls())  # remove all variables in R
library(tseries)
library(rugarch)
library(rmgarch)
library(parallel)
library(zoo)
library(fGarch)
setwd("~/Documents/Python/PycharmProjects/ml_tue2017/source/main/resources/Data/multivariate_analysis")
source("R/fun_VaR_backtesting.R")
set.seed(42)  # 42:The answer to life, the universe and everything.
####################################################################################################
######                               Volatile Market Conditions                              #######
####################################################################################################
data <- read.csv("DJI30_returns_1987_2001.csv", row.names=1, header=T) # Data sample: 17/3/1987-31/12/2001
data$Date <- NULL
T <- 500  # Out-of-sample test sample: 3/1/2000-31/12/2001
N <- 30  # number of assets under consideration
w <- c(rep(1/N, N))  # asset weight vector (assume equal weights)
a_t <- data - rep(colMeans(data), rep.int(nrow(data), ncol(data)))  # r_t - mu_t = a_t = epsilon_t
t <- c((nrow(data)-T):(nrow(data)-1))
# Non-rejection regions volatile market conditions
for (a in alpha){
print(sprintf("CI %f: [%i,%i]",a, regions_uc_test(T=T, alpha=a)$lb, regions_uc_test(T=T, alpha=a)$ub))
}
#####    Value-at-Risk Estimation   #####
alpha <- c(0.99, 0.975, 0.95, 0.9, 0.8, 0.6, 0.4, 0.2, 0.1, 0.05, 0.025, 0.01)
# Non-rejection regions volatile market conditions
for (a in alpha){
print(sprintf("CI %f: [%i,%i]",a, regions_uc_test(T=T, alpha=a)$lb, regions_uc_test(T=T, alpha=a)$ub))
}
